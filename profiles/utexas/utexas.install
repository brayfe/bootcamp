<?php
/**
 * @file
 * Install, update and uninstall functions for the UT Drupal Kit.
 */

/**
 * Administrative theme name.
 */
define('UTEXAS_INSTALL_ADMIN_THEME', 'seven');

/**
 * Core theme name.
 */
define('UTEXAS_INSTALL_CORE_THEME', 'forty_acres');

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function utexas_install() {
  // Run the standard install.
  include_once DRUPAL_ROOT . '/profiles/standard/standard.install';
  standard_install();

  // Get an array of functions.
  $operations = array(
    '_utexas_install_themes',
    '_utexas_install_blocks',
    '_utexas_install_modules',
    '_utexas_install_menus',
    '_utexas_install_content',
    '_utexas_install_settings',
  );
  $batch = array(
    'operations' => array(
      array('utexas_install_batch_process', array($operations)),
    ),
    'finished' => 'utexas_install_batch_finished',
    'title' => 'UTexas Configuration',
    'init_message' => 'UTexas configuration is starting.',
    'progress_message' => 'Installing UTexas custom components.',
    'error_message' => 'UTexas configuration configuration has encountered an error.',
  );

  batch_set($batch);

  $grant = array('access toolbar');
  user_role_grant_permissions('2', $grant);

  // Reverting all features as the final step.
  features_rebuild();
  features_revert();

}

/**
 * Batch processing callback.
 */
function utexas_install_batch_process($operations, &$context) {
  // If this is the first run, set the progress.
  if (!isset($context['sandbox']['progress'])) {
    $context['sandbox']['progress'] = 0;
    $context['sandbox']['max'] = count($operations);
  }

  // Perform the function and increment progress.
  call_user_func($operations[$context['sandbox']['progress']]);
  $context['results'][] = $operations[$context['sandbox']['progress']];
  $context['message'] = st('Now processing "@op"',
    array('@op' => $operations[$context['sandbox']['progress']]));
  $context['sandbox']['progress']++;

  // Inform the batch engine that we are not finished, and provide an
  // estimation of the completion level we reached.
  if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
    $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
  }
}

/**
 * Batch 'finished' callback.
 */
function utexas_install_batch_finished($success, $results, $operations) {
  if ($success) {
    // Here we do something meaningful with the results.
    $message = count($results) . ' configuration tasks performed.';
    drupal_set_message($message);
  }
  else {
    // An error occurred. $operations contains the operations that remained
    // unprocessed.
    $error_operation = reset($operations);
    $message = t('An error occurred while processing %error_operation with
      arguments: @arguments', array(
        '%error_operation' => $error_operation[0],
        '@arguments' => print_r($error_operation[1], TRUE),
      )
    );
    drupal_set_message($message, 'error');
  }
}

/**
 * Helper function to install themes.
 */
function _utexas_install_themes() {
  $enable = array(
    'theme_default' => UTEXAS_INSTALL_CORE_THEME,
    'admin_theme' => UTEXAS_INSTALL_ADMIN_THEME,
  );
  theme_enable($enable);

  foreach ($enable as $var => $theme) {
    if (!is_numeric($var)) {
      variable_set($var, $theme);
    }
  }

  // Enable the admin theme for node forms.
  variable_set('node_admin_theme', '1');
}

/**
 * Helper function for module settings.
 */
function _utexas_install_modules() {
  // Disable the comment module, which was enabled by the Standard installation.
  $disable = array('comment');
  module_disable($disable);
}

/**
 * Helper function for content settings.
 */
function _utexas_install_content() {
  // A way to adjust content settings. Not currently used.
}

/**
 * Helper function for content settings.
 */
function _utexas_install_settings() {

  // Pathauto settings.
  variable_set('pathauto_node_pattern', '[node:title]');

  variable_set('menu_block_suppress_core', '1');
  variable_set('menu_block_menu_order', array('main-menu' => ''));

  // Node clone settings.
  variable_set('clone_menu_links', 0);
  variable_set('clone_method', 'save-edit');
  variable_set('clone_nodes_without_confirm', 1);
  variable_set('clone_omitted',
    array(
      'landing_page' => 0,
      'standard_page' => 0,
    )
  );
  variable_set('clone_reset_landing_page', 1);
  variable_set('clone_reset_standard_page', 1);
  variable_set('clone_use_node_type_name', 0);

  // CKEditor Link File settings.
  variable_set('ckeditor_link_file_link_method', 'url');
  variable_set('ckeditor_link_type_name', 'Page title or filename on this site.');

  // Update settings for Text Formats.
  $formats['filtered_html_for_blocks'] = array(
    'format' => 'filtered_html_for_blocks',
    'name' => 'Filtered HTML for Blocks',
    'cache' => 1,
    'status' => 1,
    'weight' => -10,
    'filters' => array(
      'filter_html' => array(
        'weight' => -10,
        'status' => 1,
        'settings' => array(
          'allowed_html' => '<a> <abbr> <address> <article> <aside> <blockquote> <br> <button> <caption> <cite> <code> <del> <details> <dl> <dt> <dd> <div> <em> <figure> <figcaption> <img> <i> <input> <hr> <h1> <h2> <h3> <h4> <h5> <h6> <ul> <ol> <li> <mark> <nav> <p> <pre> <sub> <sup> <table> <th> <tr> <td> <thead> <tbody> <tfoot> <script> <section> <span> <source> <strong> <time> <track> <video>',
          'filter_html_help' => 1,
          'filter_html_nofollow' => 0,
        ),
      ),
      'qualtrics_filter' => array(
        'weight' => -1,
        'status' => 1,
        'settings' => array(
          'qualtrics_filter_height' => 500,
          'qualtrics_filter_title' => 'Qualtrics survey',
        ),
      ),
      'video_filter' => array(
        'weight' => -1,
        'status' => 1,
        'settings' => array(
          'video_filter_width' => '400',
          'video_filter_height' => '400',
          'video_filter_autoplay' => '0',
          'video_filter_related' => '0',
          'video_filter_html5' => '1',
        ),
      ),
      'ckeditor_link_filter' => array(
        'weight' => 0,
        'status' => 1,
        'settings' => array(),
      ),
      'filter_autop' => array(
        'weight' => -2,
        'status' => 1,
        'settings' => array(),
      ),
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
        'settings' => array(
          'filter_url_length' => 72,
        ),
      ),
      'tablesaw' => array(
        'weight' => 0,
        'status' => 1,
        'settings' => array(),
      ),
      'media_filter' => array(
        'weight' => 2,
        'status' => 1,
        'settings' => array(),
      ),
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
        'settings' => array(),
      ),
    ),
  );

  $formats['filtered_html'] = array();
  $formats['full_html'] = array();

  foreach ($formats as $type => $settings) {
    $exists = (bool) db_query_range('SELECT 1 FROM {filter_format} WHERE format = :name', 0, 1, array(':name' => $type))->fetchField();
    if (!$exists) {
      // Create new text formats.
      filter_format_save((object) $settings);
    }
    else {
      // Modify existing text formats.
      $enable_tablesaw = db_merge('filter')
        ->key(array('format' => $type, 'name' => 'tablesaw'))
        ->fields(array(
          'status' => 1,
        ))
        ->execute();
      drupal_set_message(t('Tablesaw filter was enabled for @type text format', array('@type' => $type)));
      if ($type == 'filtered_html') {
        $update_allowed = db_merge('filter')
          ->key(array('format' => $type, 'name' => 'filter_html'))
          ->fields(array(
            'settings' => serialize(
              array(
                'allowed_html' => '<a> <abbr> <address> <article> <aside> <blockquote> <br> <button> <caption> <cite> <code> <del> <details> <dl> <dt> <dd> <div> <em> <figure> <figcaption> <img> <i> <input> <hr> <h1> <h2> <h3> <h4> <h5> <h6> <ul> <ol> <li> <mark> <nav> <p> <pre> <sub> <sup> <table> <th> <tr> <td> <thead> <tbody> <tfoot> <section> <span> <source> <strong> <time> <track> <video>',
                'filter_html_help' => 1,
                'filter_html_nofollow' => 0,
              )),
            ))
          ->execute();
        $enable_media_filter = db_merge('filter')
          ->key(array('format' => $type, 'name' => 'media_filter'))
          ->fields(array(
            'settings' => serialize(array()),
            'weight' => 2,
            'status' => 1,
            ))
          ->execute();
        $enable_ckeditor_link_filter = db_merge('filter')
          ->key(array('format' => $type, 'name' => 'ckeditor_link_filter'))
          ->fields(array(
            'settings' => serialize(array()),
            'weight' => 0,
            'status' => 1,
            ))
          ->execute();
        $enable_qualtrics_filter = db_merge('filter')
          ->key(array('format' => $type, 'name' => 'qualtrics_filter'))
          ->fields(array(
            'settings' => serialize(array('height' => '500', 'title' => 'Qualtrics survey')),
            'weight' => 3,
            'status' => 1,
          ))
          ->execute();
        $enable_video_filter = db_merge('filter')
          ->key(array('format' => $type, 'name' => 'video_filter'))
          ->fields(array(
            'settings' => serialize(
              array(
                'video_filter_width' => '400',
                'video_filter_height' => '400',
                'video_filter_autoplay' => '0',
                'video_filter_related' => '0',
                'video_filter_html5' => '1',
              )),
            'weight' => 4,
            'status' => 1,
          ))
          ->execute();
      }
    }
  }

  $media_ckeditor = drupal_get_path('module', 'media_ckeditor');
  $ckeditor_link = drupal_get_path('module', 'ckeditor_link');

  // CKEditor settings.
  $ckeditor = array(
    'CKEditor Global Profile' => array(
      'name' => 'CKEditor Global Profile',
      'settings' => array(
        'skin' => 'moono',
        'ckeditor_path' => '//cdn.ckeditor.com/4.5.4/full-all',
        'ckeditor_local_path' => '',
        'ckeditor_plugins_path' => '%b/profiles/utexas/libraries/ckeditor/plugins',
        'ckeditor_plugins_local_path' => '',
        'ckfinder_path' => '%m/ckfinder',
        'ckfinder_local_path' => '',
        'ckeditor_aggregate' => 'f',
        'toolbar_wizard' => 't',
        'loadPlugins' => array(),
      ),
      'input_formats' => array(),
    ),
    'Advanced' => array(
      'name' => 'Advanced',
      'settings' => array(
        'ss' => 2,
        'toolbar' => '[[\'Source\'],[\'Cut\',\'Copy\',\'Paste\',\'PasteText\',\'PasteFromWord\',\'-\',\'SpellChecker\',\'Scayt\'],[\'Undo\',\'Redo\',\'Find\',\'Replace\',\'-\',\'SelectAll\'],[\'Media\',\'video_filter\',\'qualtrics_filter\',\'Table\',\'HorizontalRule\',\'SpecialChar\'],[\'Maximize\'],\'/\',[\'Format\'],[\'Bold\',\'Italic\',\'Underline\',\'Strike\',\'-\',\'Subscript\',\'Superscript\',\'-\',\'RemoveFormat\'],[\'NumberedList\',\'BulletedList\',\'-\',\'Outdent\',\'Indent\',\'Blockquote\'],[\'JustifyLeft\',\'JustifyCenter\',\'JustifyRight\',\'JustifyBlock\',\'-\',\'BidiLtr\',\'BidiRtl\'],[\'Link\',\'Unlink\',\'Anchor\']]',
        'expand' => 't',
        'default' => 't',
        'show_toggle' => 't',
        'uicolor' => 'default',
        'uicolor_user' => 'default',
        'width' => '100%',
        'lang' => 'en',
        'auto_lang' => 't',
        'language_direction' => 'default',
        'allowed_content' => 'f',
        'extraAllowedContent' => '',
        'enter_mode' => 'p',
        'shift_enter_mode' => 'br',
        'font_format' => 'p;div;pre;address;h1;h2;h3;h4;h5;h6',
        'custom_formatting' => 'f',
        'formatting' => array(
          'custom_formatting_options' => array(
            'indent' => 'indent',
            'breakBeforeOpen' => 'breakBeforeOpen',
            'breakAfterOpen' => 'breakAfterOpen',
            'breakAfterClose' => 'breakAfterClose',
            'breakBeforeClose' => 0,
            'pre_indent' => 0,
          ),
        ),
        'css_mode' => 'none',
        'css_path' => '',
        'css_style' => 'theme',
        'styles_path' => '',
        'filebrowser' => 'none',
        'filebrowser_image' => '',
        'filebrowser_flash' => '',
        'UserFilesPath' => '%b%f/',
        'UserFilesAbsolutePath' => '%d%b%f/',
        'forcePasteAsPlainText' => 'f',
        'html_entities' => 'f',
        'scayt_autoStartup' => 'f',
        'js_conf' => '',
        'theme_config_js' => 'f',
        'loadPlugins' => array(
          'ckeditor_link' => array(
            'name' => 'drupal_path',
            'desc' => 'CKEditor Link - A plugin to easily create links to Drupal internal paths',
            'path' => '%base_path%' . $ckeditor_link . '/plugins/link/',
          ),
          'lineutils' => array(
            'name' => 'lineutils',
            'desc' => 'Plugin file: lineutils',
            'path' => '%plugin_dir_extra%lineutils/',
            'buttons' => FALSE,
            'default' => 'f',
          ),
          'media' => array(
            'name' => 'media',
            'desc' => 'Plugin for embedding files using Media CKEditor',
            'path' => '%base_path%' . $media_ckeditor . '/js/plugins/media/',
            'buttons' => array(
              'Media' => array(
                'icon' => 'images/icon.gif',
                'label' => 'Add media',
              ),
            ),
            'default' => 'f',
          ),
          'qualtrics_filter' => array(
            'name' => 'qualtrics_filter',
            'desc' => 'Plugin for inserting embed tags with qualtrics_filter',
            'path' => '%plugin_dir_extra%qualtrics_filter/',
            'buttons' => array(
              'qualtrics_filter' => array('label' => 'qualtrics_filter', 'icon' => 'qualtrics_filter.png'),
            ),
            'default' => 'f',
          ),
          'video_filter' => array(
            'name' => 'video_filter',
            'desc' => 'Plugin for inserting video tags with video_filter',
            'path' => '%plugin_dir_extra%video_filter/',
            'buttons' => array(
              'video_filter' => array('label' => 'video_filter', 'icon' => 'video_filter.png'),
            ),
            'default' => 'f',
          ),
          'widget' => array(
            'name' => 'widget',
            'desc' => 'Plugin file: widget',
            'path' => '%plugin_dir_extra%widget/',
            'buttons' => FALSE,
            'default' => 'f',
          ),
        ),
      ),
      'input_formats' => array(
        'filtered_html',
        'filtered_html_for_blocks',
      ),
    ),
  );
  foreach ($ckeditor as $key => $profile) {
    $setting = db_merge('ckeditor_settings')
      ->key(array('name' => $profile['name']))
      ->fields(array(
        'settings' => serialize($profile['settings']),
      ))
      ->execute();
      // Define the text formats that can use the CKEditor profile.
      if (!empty($profile['input_formats'])) {
      foreach ($profile['input_formats'] as $format) {
        $text_format = db_merge('ckeditor_input_format')
          ->key(array('name' => $profile['name'], 'format' => $format))
          ->fields(array(
            'name' => $profile['name'],
            'format' => $format,
          ))
          ->execute();
      }
    }
  }
}

/**
 * Helper function to configure default blocks.
 */
function _utexas_install_blocks() {
  $default_theme = variable_get('theme_default', UTEXAS_INSTALL_CORE_THEME);
  $admin_theme = UTEXAS_INSTALL_ADMIN_THEME;

  // Set default blocks.
  $blocks = array(
    // Main theme blocks.
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -1,
      'region' => '',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => '',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'navigation',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => '',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => -1,
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'powered-by',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => -1,
      'pages' => '',
      'cache' => -1,
    ),
    // Admin theme blocks.
    array(
      'module' => 'node',
      'delta' => 'recent',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'dashboard_main',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'workbench',
      'delta' => 'block',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => -1,
      'pages' => '',
      'cache' => -1,
    ),
  );

  foreach ($blocks as $block) {
    $updated = db_update('block')->fields(array(
      'region' => $block['region'],
      'status' => $block['status'],
    ))
      ->condition('module', $block['module'], '=')
      ->condition('delta', $block['delta'], '=')
      ->condition('theme', $block['theme'], '=')
      ->execute();
  }
}

/**
 * Helper function to add default menus.
 */
function _utexas_install_menus() {

  // Set special menu items to work with mega menu.
  variable_set('special_menu_items_nolink_tag', '<a href="#">');

  // Create the menu if it doesn't exist.
  if (!menu_load('menu-header')) {
    $menu = array(
      'menu_name' => 'menu-header',
      'title' => t('Header menu'),
      'description' => 'The Header menu is displayed next to the search bar in the header region.',
    );
    menu_save($menu);
  }
  $items = array(
    array(
      'link_title' => st('Header Link 1'),
      'link_path' => 'node/1',
    ),
    array(
      'link_title' => st('Header Link 2'),
      'link_path' => 'node/1',
    ),
  );
  utexas_menu_builder($items, 'menu-header');
  if (!menu_load('menu_footer')) {
    $menu = array(
      'menu_name' => 'menu-footer',
      'title' => t("Footer menu"),
      'description' => 'The Footer menu is displayed in the middle section of the site footer.',
    );
    menu_save($menu);
  }
  $items = array(
    array(
      'link_title' => st('Footer Link 1'),
      'link_path' => 'node/1',
    ),
    array(
      'link_title' => st('Footer Link 2'),
      'link_path' => 'node/1',
    ),
    array(
      'link_title' => st('Footer Link 3'),
      'link_path' => 'node/1',
    ),
    array(
      'link_title' => st('Footer Link 4'),
      'link_path' => 'node/1',
    ),
    array(
      'link_title' => st('Footer Link 5'),
      'link_path' => 'node/1',
    ),
  );
  utexas_menu_builder($items, 'menu-footer');
}
